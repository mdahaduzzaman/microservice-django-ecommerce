services:
  kong-database:
    image: postgres:15.2
    container_name: kong-database
    networks:
      - kong-net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - kong_data:/var/lib/postgresql/data

  kong-migrations:
    image: kong/kong-gateway:3.10.0.2
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kongpass
      KONG_PASSWORD: test
      # Uncomment if using Enterprise edition
      # KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
    command: "kong migrations bootstrap"
    restart: on-failure

  kong-gateway:
    image: kong/kong-gateway:3.10.0.2
    depends_on:
      kong-migrations:
        condition: service_completed_successfully
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      # Uncomment if using Enterprise edition
      # KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
      - "8445:8445"
      - "8003:8003"
      - "8004:8004"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

  konga-database:
    image: postgres:11.6
    container_name: konga-database
    networks:
      - kong-net
    environment:
      POSTGRES_USER: konga
      POSTGRES_DB: konga
      POSTGRES_PASSWORD: konga
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U konga"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - konga_data:/var/lib/postgresql/data

  konga-prepare:
    image: pantsel/konga:latest
    platform: linux/amd64
    command: "-c prepare -a postgres -u postgresql://konga:konga@konga-database:5432/konga"
    environment:
      DB_ADAPTER: postgres
      DB_HOST: konga-database
      DB_USER: konga
      DB_PASSWORD: konga
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - konga-database

  konga:
    image: pantsel/konga:latest
    platform: linux/amd64
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: konga-database
      DB_USER: konga
      DB_PASSWORD: konga
      TOKEN_SECRET: 4b5ffb1b86049479d7bc875bcaf0a9b4fcfd1b16
      DB_DATABASE: konga
      NODE_ENV: development
    depends_on:
      - konga-database
    ports:
      - "1337:1337"


networks:
  kong-net:
    name: kong-net

volumes:
  kong_data:
  konga_data:
